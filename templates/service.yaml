apiVersion: v1
kind: Service
metadata:
  name: analysis-regular
  labels:
    app:  analysis-regular
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
spec:
  selector:
    app:  analysis-regular
    release: {{ .Release.Name }}
  type: ClusterIP
  ports:
    - name: 8778-tcp
      port: 8778
      protocol: TCP
      targetPort: 8778
    - name: 9779-tcp
      port: 9779
      protocol: TCP
      targetPort: 9779
---
apiVersion: v1
kind: Service
metadata:
  name: analysis-core
  labels:
    app: analysis-core
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
spec:
  selector:
    app: analysis-core
    release: {{ .Release.Name }}
  type: ClusterIP
  ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: analysis-virus
  labels:
    app: analysis-virus
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
spec:
  selector:
    app: analysis-virus
    release: {{ .Release.Name }}
  type: ClusterIP
  ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080


---
apiVersion: v1
kind: Service
metadata:
  name: analysis-gateway
  labels:
    app: analysis-gateway
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
spec:
  selector:
    app: analysis-gateway
  type: ClusterIP
  ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080

---
{{- if .Values.backend_creation.postgres }}
kind: Service
apiVersion: v1
metadata:
  annotations:
    app.openshift.io/connects-to: >-
      [{"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"{{ .Values.postgres.database_name }}"}]
  name: pgweb
  namespace: {{ .Values.project_namespace }}
  labels:
    app: pgweb
    app.kubernetes.io/component: pgweb
    app.kubernetes.io/instance: pgweb
    app.kubernetes.io/part-of: analysis
    app.openshift.io/runtime-version: latest
spec:
  ports:
    - name: 8081-tcp
      protocol: TCP
      port: 8081
      targetPort: 8081
  selector:
    app: pgweb
    deploymentconfig: pgweb
  type: ClusterIP
  sessionAffinity: None
{{- end }}

---
{{- if .Values.backend_creation.kafka }}
kind: Service
apiVersion: v1
metadata:
  name: kafdrop
  namespace: {{ .Values.project_namespace }}
  labels:
    app: kafdrop
spec:
  ports:
    - name: 9000-tcp
      port: 9000
      protocol: TCP
      targetPort: 9000
  selector:
    deploymentconfig: analysis-events-kafdrop

{{- end }}
